name: Test and publish

on: [push]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        os: [ubuntu-22.04, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - uses: actions/cache@v3
        name: Define a cache for pre-commit
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-4|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Install the project dependencies
        run: poetry install --sync --with dev
      - name: Run static analysis
        run: poetry run pre-commit run --show-diff-on-failure --color=always --all-files
      - name: Run the automated tests
        run: poetry run pytest -v

  publish:
    runs-on: ubuntu-latest
    needs: test
    environment: release
    permissions:
      id-token: write
    if: ${{ startsWith(github.ref, 'refs/tags/release/') }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - name: Install poetry plugins
        run: poetry self add 'poetry-dynamic-versioning[plugin]' 
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Build package
        run: poetry build
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
